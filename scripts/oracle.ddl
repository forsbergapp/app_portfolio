-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-02-15 19:02:28 CET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE ROLE role_app_admin NOT IDENTIFIED;

GRANT connect,
    CREATE SESSION, resource TO role_app_admin;

CREATE ROLE role_app_dba NOT IDENTIFIED;

GRANT connect,
    CREATE SESSION, resource TO role_app_dba;

CREATE ROLE role_app_home NOT IDENTIFIED;

GRANT connect,
    CREATE SESSION, resource TO role_app_home;

CREATE ROLE role_app_property_management NOT IDENTIFIED;

GRANT connect,
    CREATE SESSION, resource TO role_app_property_management;

CREATE ROLE role_app_timetables NOT IDENTIFIED;

GRANT connect,
    CREATE SESSION, resource TO role_app_timetables;

CREATE USER app_admin IDENTIFIED BY APP_1_portfolio
    ACCOUNT UNLOCK;

GRANT role_app_admin TO app_admin;

GRANT
    UNLIMITED TABLESPACE
TO app_admin;

CREATE USER app_home IDENTIFIED BY APP_1_portfolio
    ACCOUNT UNLOCK;

GRANT role_app_home TO app_home;

GRANT
    UNLIMITED TABLESPACE
TO app_home;

CREATE USER app_portfolio IDENTIFIED BY APP_1_portfolio
    ACCOUNT UNLOCK;

GRANT role_app_dba TO app_portfolio;

GRANT
    UNLIMITED TABLESPACE
TO app_portfolio;

CREATE USER app_property_management IDENTIFIED BY APP_1_portfolio
    ACCOUNT UNLOCK;

GRANT role_app_property_management TO app_property_management;

GRANT
    UNLIMITED TABLESPACE
TO app_property_management;

CREATE USER app_timetables IDENTIFIED BY APP_1_portfolio
    ACCOUNT UNLOCK;

GRANT role_app_timetables TO app_timetables;

GRANT
    UNLIMITED TABLESPACE
TO app_timetables;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE app_portfolio.app (
    id       INTEGER NOT NULL,
    app_name VARCHAR2(100) NOT NULL,
    url      VARCHAR2(100),
    logo     VARCHAR2(100)
);

GRANT SELECT ON app_portfolio.app TO role_app_home;

GRANT SELECT ON app_portfolio.app TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app TO role_app_dba;

GRANT SELECT ON app_portfolio.app TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app TO role_app_admin;

ALTER TABLE app_portfolio.app ADD CONSTRAINT app_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_log (
    id                          INTEGER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    app_module                  VARCHAR2(100),
    app_module_type             VARCHAR2(100),
    app_module_request          VARCHAR2(500),
    app_module_result           VARCHAR2(4000),
    app_user_id                 VARCHAR2(100),
    user_language               VARCHAR2(100),
    user_timezone               VARCHAR2(100),
    user_number_system          VARCHAR2(100),
    user_platform               VARCHAR2(100),
    user_gps_latitude           VARCHAR2(100),
    user_gps_longitude          VARCHAR2(100),
    server_remote_addr          VARCHAR2(100),
    server_user_agent           VARCHAR2(500),
    server_http_host            VARCHAR2(100),
    server_http_accept_language VARCHAR2(100),
    date_created                DATE,
    app_id                      INTEGER NOT NULL
);

COMMENT ON COLUMN app_portfolio.app_log.app_module IS
    'INIT
AUTH
MAIL
GEOLOCATION
REPORT
WORLDCITIES';

COMMENT ON COLUMN app_portfolio.app_log.app_module_type IS
    'INIT 			
AUTH_TOKEN_GET
send:
MAIL_SIGNUP			1 //Template, signup
MAIL_UNVERIFIED		2 //Template, unverified user
			 	     when logging in
MAIL_RESET_PASSWORD	3 //Template, reset password
MAIL_CHANGE_EMAIL		4 //Template, change email
read:
MAIL_SIGNUP_READ		1 //Read email, signup
MAIL_UNVERIFIED_READ	2 //Read email, unverified user
				     when logging in
MAIL_RESET_PASSWORD_READ	3 //Read email, reset password
MAIL_CHANGE_EMAIL_READ	4 //Read email, change email
MAIL_LOGO_READ		Read only logo used in email

GEOLOCATION_PLACE
GEOLOCATION_IP
REPORT_TIMETABLE_DAY
REPORT_TIMETABLE_MONTH
REPORT_TIMETABLE_YEAR
WORLDCITIES_CITIES';

COMMENT ON COLUMN app_portfolio.app_log.app_module_request IS
    'INIT: 
AUTH_TOKEN_GET:	AT: token, DT: token
MAIL%: 		emailaddress
GEOLOCATION%: 	url
REPORT%: 		url
WORLDCITIES%:	countrycode';

COMMENT ON COLUMN app_portfolio.app_log.app_module_result IS
    'successful info or any error message ';

COMMENT ON COLUMN app_portfolio.app_log.user_language IS
    'navigator.language';

COMMENT ON COLUMN app_portfolio.app_log.user_timezone IS
    'Intl.DateTimeFormat().resolvedOptions().timeZone;';

COMMENT ON COLUMN app_portfolio.app_log.user_number_system IS
    'Intl.NumberFormat().resolvedOptions().numberingSystem';

COMMENT ON COLUMN app_portfolio.app_log.user_platform IS
    'navigator.platform';

GRANT SELECT, INSERT ON app_portfolio.app_log TO role_app_home;

GRANT SELECT, INSERT ON app_portfolio.app_log TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_log TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.app_log TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_log TO role_app_admin;

ALTER TABLE app_portfolio.app_log ADD CONSTRAINT app_log_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_message (
    message_code VARCHAR2(100) NOT NULL,
    app_id       INTEGER NOT NULL
);

GRANT SELECT ON app_portfolio.app_message TO role_app_home;

GRANT SELECT ON app_portfolio.app_message TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_message TO role_app_dba;

GRANT SELECT ON app_portfolio.app_message TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_message TO role_app_admin;

ALTER TABLE app_portfolio.app_message ADD CONSTRAINT app_message_pk PRIMARY KEY ( message_code,
                                                                                  app_id );

CREATE TABLE app_portfolio.app_object (
    app_id      INTEGER NOT NULL,
    object_name VARCHAR2(100) NOT NULL
);

GRANT SELECT ON app_portfolio.app_object TO role_app_home;

GRANT SELECT ON app_portfolio.app_object TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object TO role_app_dba;

GRANT SELECT ON app_portfolio.app_object TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object TO role_app_admin;

ALTER TABLE app_portfolio.app_object ADD CONSTRAINT app_object_pk PRIMARY KEY ( object_name,
                                                                                app_id );

ALTER TABLE app_portfolio.app_object ADD CONSTRAINT app_object_object_name_un UNIQUE ( object_name );

CREATE TABLE app_portfolio.app_object_item (
    app_id           INTEGER NOT NULL,
    object_name      VARCHAR2(100) NOT NULL,
    object_item_name VARCHAR2(100) NOT NULL
);

GRANT SELECT ON app_portfolio.app_object_item TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_item TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_item TO role_app_dba;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_item TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_item TO role_app_timetables;

ALTER TABLE app_portfolio.app_object_item
    ADD CONSTRAINT app_object_item_pk PRIMARY KEY ( object_name,
                                                    app_id,
                                                    object_item_name );

CREATE TABLE app_portfolio.app_object_item_subitem (
    app_id           INTEGER NOT NULL,
    object_name      VARCHAR2(100) NOT NULL,
    object_item_name VARCHAR2(100) NOT NULL,
    subitem_name     VARCHAR2(100) NOT NULL
);

GRANT SELECT ON app_portfolio.app_object_item_subitem TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_item_subitem TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_item_subitem TO role_app_dba;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_item_subitem TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_item_subitem TO role_app_timetables;

ALTER TABLE app_portfolio.app_object_item_subitem
    ADD CONSTRAINT app_object_item_subitem_pk PRIMARY KEY ( subitem_name,
                                                            object_item_name,
                                                            object_name,
                                                            app_id );

CREATE TABLE app_portfolio.app_object_item_subitem_fixed (
    app_id           INTEGER NOT NULL,
    object_name      VARCHAR2(100) NOT NULL,
    object_item_name VARCHAR2(100) NOT NULL,
    subitem_name     VARCHAR2(100) NOT NULL,
    subitem_text     VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_item_subitem_fixed TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_item_subitem_fixed TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_item_subitem_fixed TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_item_subitem_fixed TO role_app_dba;

GRANT SELECT ON app_portfolio.app_object_item_subitem_fixed TO role_app_timetables;

ALTER TABLE app_portfolio.app_object_item_subitem_fixed
    ADD CONSTRAINT app_object_item_subitem_fixed_pk PRIMARY KEY ( subitem_name,
                                                                  object_item_name,
                                                                  object_name,
                                                                  app_id );

CREATE TABLE app_portfolio.app_object_item_translation (
    app_id           INTEGER NOT NULL,
    object_name      VARCHAR2(100) NOT NULL,
    object_item_name VARCHAR2(100) NOT NULL,
    language_id      INTEGER NOT NULL,
    text             VARCHAR2(100) NOT NULL
);

GRANT SELECT ON app_portfolio.app_object_item_translation TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_item_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_item_translation TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_item_translation TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_item_translation TO role_app_dba;

ALTER TABLE app_portfolio.app_object_item_translation
    ADD CONSTRAINT app_object_item_translation_pk PRIMARY KEY ( language_id,
                                                                object_item_name,
                                                                object_name,
                                                                app_id );

CREATE TABLE app_portfolio.app_object_subitem_translation (
    app_id           INTEGER NOT NULL,
    object_name      VARCHAR2(100) NOT NULL,
    object_item_name VARCHAR2(100) NOT NULL,
    subitem_name     VARCHAR2(100) NOT NULL,
    language_id      INTEGER NOT NULL,
    text             VARCHAR2(100) NOT NULL
);

GRANT SELECT ON app_portfolio.app_object_subitem_translation TO role_app_timetables;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_subitem_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_subitem_translation TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_subitem_translation TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_subitem_translation TO role_app_dba;

ALTER TABLE app_portfolio.app_object_subitem_translation
    ADD CONSTRAINT app_object_subitem_translation_pk PRIMARY KEY ( language_id,
                                                                   subitem_name,
                                                                   object_item_name,
                                                                   object_name,
                                                                   app_id );

CREATE TABLE app_portfolio.app_object_translation (
    app_id      INTEGER NOT NULL,
    object_name VARCHAR2(100) NOT NULL,
    language_id INTEGER NOT NULL,
    text        VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_object_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.app_object_translation TO role_app_timetables;

GRANT SELECT ON app_portfolio.app_object_translation TO role_app_home;

GRANT SELECT ON app_portfolio.app_object_translation TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_object_translation TO role_app_dba;

ALTER TABLE app_portfolio.app_object_translation
    ADD CONSTRAINT app_object_translation_pk PRIMARY KEY ( app_id,
                                                           object_name,
                                                           language_id );

CREATE TABLE app_portfolio.app_parameter (
    app_id            INTEGER NOT NULL,
    parameter_type_id VARCHAR2(100) NOT NULL,
    parameter_name    VARCHAR2(100) NOT NULL,
    parameter_value   VARCHAR2(100),
    parameter_comment VARCHAR2(100)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_parameter TO role_app_admin;

GRANT SELECT ON app_portfolio.app_parameter TO role_app_timetables;

GRANT SELECT ON app_portfolio.app_parameter TO role_app_home;

GRANT SELECT ON app_portfolio.app_parameter TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.app_parameter TO role_app_dba;

ALTER TABLE app_portfolio.app_parameter ADD CONSTRAINT app_parameter_pk PRIMARY KEY ( app_id,
                                                                                      parameter_name );

CREATE TABLE app_portfolio.app_timetables_place (
    id              INTEGER NOT NULL,
    title           VARCHAR2(100) NOT NULL,
    latitude        VARCHAR2(100),
    longitude       VARCHAR2(100),
    timezone        VARCHAR2(100),
    country1_id     INTEGER NOT NULL,
    country2_id     INTEGER,
    group_place1_id INTEGER NOT NULL,
    group_place2_id INTEGER NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_place TO role_app_admin;

GRANT SELECT ON app_portfolio.app_timetables_place TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_place TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_place ADD CONSTRAINT app_timetables_place_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_timetables_theme (
    id                   INTEGER NOT NULL,
    title                VARCHAR2(100) NOT NULL,
    author               VARCHAR2(100) NOT NULL,
    author_url           VARCHAR2(100),
    premium              NUMBER(1),
    image_preview        BLOB,
    image_preview_url    VARCHAR2(100),
    image_header         BLOB,
    image_header_url     VARCHAR2(100),
    image_footer         BLOB,
    image_footer_url     VARCHAR2(100),
    image_background     BLOB,
    image_background_url VARCHAR2(100),
    theme_type_id        INTEGER NOT NULL,
    theme_category_id    INTEGER NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_theme TO role_app_admin;

GRANT SELECT ON app_portfolio.app_timetables_theme TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_theme TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_theme ADD CONSTRAINT app_timetables_theme_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_timetables_user_setting (
    id                                        INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    description                               VARCHAR2(100),
    regional_language_locale                  VARCHAR2(100),
    regional_current_timezone_select_id       NUMBER(10),
    regional_timezone_select_id               NUMBER(10),
    regional_number_system_select_id          NUMBER,
    regional_layout_direction_select_id       NUMBER,
    regional_second_language_locale           VARCHAR2(100),
    regional_column_title_select_id           NUMBER,
    regional_arabic_script_select_id          NUMBER,
    regional_calendar_type_select_id          NUMBER,
    regional_calendar_hijri_type_select_id    NUMBER,
    gps_map_type_select_id                    NUMBER,
    gps_country_id                            INTEGER,
    gps_city_id                               INTEGER,
    gps_popular_place_id                      INTEGER,
    gps_lat_text                              VARCHAR2(100),
    gps_long_text                             VARCHAR2(100),
    design_theme_day_id                       INTEGER NOT NULL,
    design_theme_month_id                     INTEGER NOT NULL,
    design_theme_year_id                      INTEGER NOT NULL,
    design_paper_size_select_id               NUMBER,
    design_row_highlight_select_id            NUMBER,
    design_column_weekday_checked             NUMBER,
    design_column_calendartype_checked        NUMBER,
    design_column_notes_checked               NUMBER,
    design_column_gps_checked                 NUMBER,
    design_column_timezone_checked            NUMBER,
    image_header_image_img                    BLOB,
    image_footer_image_img                    BLOB,
    text_header_1_text                        VARCHAR2(100),
    text_header_2_text                        VARCHAR2(100),
    text_header_3_text                        VARCHAR2(100),
    text_header_align                         VARCHAR2(10),
    text_footer_1_text                        VARCHAR2(100),
    text_footer_2_text                        VARCHAR2(100),
    text_footer_3_text                        VARCHAR2(100),
    text_footer_align                         VARCHAR2(10),
    prayer_method_select_id                   NUMBER,
    prayer_asr_method_select_id               NUMBER,
    prayer_high_latitude_adjustment_select_id NUMBER,
    prayer_time_format_select_id              NUMBER,
    prayer_hijri_date_adjustment_select_id    NUMBER,
    prayer_fajr_iqamat_select_id              NUMBER,
    prayer_dhuhr_iqamat_select_id             NUMBER,
    prayer_asr_iqamat_select_id               NUMBER,
    prayer_maghrib_iqamat_select_id           NUMBER,
    prayer_isha_iqamat_select_id              NUMBER,
    prayer_column_imsak_checked               NUMBER,
    prayer_column_sunset_checked              NUMBER,
    prayer_column_midnight_checked            NUMBER,
    prayer_column_fast_start_end_select_id    NUMBER,
    date_created                              DATE,
    date_modified                             DATE,
    user_account_id                           INTEGER NOT NULL
);

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT arc_1 CHECK ( ( ( gps_country_id IS NOT NULL )
                                   AND ( gps_popular_place_id IS NULL ) )
                                 OR ( ( gps_popular_place_id IS NOT NULL )
                                      AND ( gps_country_id IS NULL ) )
                                 OR ( ( gps_country_id IS NULL )
                                      AND ( gps_popular_place_id IS NULL ) ) );

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.app_timetables_user_setting TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_user_setting ADD CONSTRAINT app_timetables_user_setting_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_timetables_user_setting_hist (
    id                                        INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    dml                                       VARCHAR2(1),
    dml_date                                  DATE,
    user_setting_id                           INTEGER,
    description                               VARCHAR2(100),
    regional_language_locale                  VARCHAR2(100),
    regional_current_timezone_select_id       NUMBER,
    regional_timezone_select_id               NUMBER,
    regional_number_system_select_id          NUMBER,
    regional_layout_direction_select_id       NUMBER,
    regional_second_language_locale           VARCHAR2(100),
    regional_column_title_select_id           NUMBER,
    regional_arabic_script_select_id          NUMBER,
    regional_calendar_type_select_id          NUMBER,
    regional_calendar_hijri_type_select_id    NUMBER,
    gps_map_type_select_id                    NUMBER,
    gps_country_id                            INTEGER,
    gps_city_id                               INTEGER,
    gps_popular_place_id                      INTEGER,
    gps_lat_text                              VARCHAR2(100),
    gps_long_text                             VARCHAR2(100),
    design_theme_day_id                       INTEGER,
    design_theme_month_id                     INTEGER,
    design_theme_year_id                      INTEGER,
    design_paper_size_select_id               NUMBER,
    design_row_highlight_select_id            NUMBER,
    design_column_weekday_checked             NUMBER,
    design_column_calendartype_checked        NUMBER,
    design_column_notes_checked               NUMBER,
    design_column_gps_checked                 NUMBER,
    design_column_timezone_checked            NUMBER,
    image_header_image_img                    BLOB,
    image_footer_image_img                    BLOB,
    text_header_1_text                        VARCHAR2(100),
    text_header_2_text                        VARCHAR2(100),
    text_header_3_text                        VARCHAR2(100),
    text_header_align                         VARCHAR2(10),
    text_footer_1_text                        VARCHAR2(100),
    text_footer_2_text                        VARCHAR2(100),
    text_footer_3_text                        VARCHAR2(100),
    text_footer_align                         VARCHAR2(10),
    prayer_method_select_id                   NUMBER,
    prayer_asr_method_select_id               NUMBER,
    prayer_high_latitude_adjustment_select_id NUMBER,
    prayer_time_format_select_id              NUMBER,
    prayer_hijri_date_adjustment_select_id    NUMBER,
    prayer_fajr_iqamat_select_id              NUMBER,
    prayer_dhuhr_iqamat_select_id             NUMBER,
    prayer_asr_iqamat_select_id               NUMBER,
    prayer_maghrib_iqamat_select_id           NUMBER,
    prayer_isha_iqamat_select_id              NUMBER,
    prayer_column_imsak_checked               NUMBER,
    prayer_column_sunset_checked              NUMBER,
    prayer_column_midnight_checked            NUMBER,
    prayer_column_fast_start_end_select_id    NUMBER,
    date_created                              DATE,
    date_modified                             DATE,
    user_account_id                           INTEGER
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.app_timetables_user_setting_hist TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting_hist TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_user_setting_hist ADD CONSTRAINT app_timetables_user_setting_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.app_timetables_user_setting_like (
    id              INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    user_account_id INTEGER NOT NULL,
    user_setting_id INTEGER NOT NULL,
    date_created    DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting_like TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.app_timetables_user_setting_like TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting_like TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_user_setting_like ADD CONSTRAINT app_timetables_user_setting_like_pk PRIMARY KEY ( user_account_id,
                                                                                                                            user_setting_id );

ALTER TABLE app_portfolio.app_timetables_user_setting_like ADD CONSTRAINT app_timetables_user_setting_like_un UNIQUE ( id );

CREATE TABLE app_portfolio.app_timetables_user_setting_like_hist (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml                  VARCHAR2(1),
    dml_date             DATE,
    user_setting_like_id INTEGER,
    user_account_id      INTEGER,
    user_setting_id      INTEGER,
    date_created         DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting_like_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.app_timetables_user_setting_like_hist TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting_like_hist TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_user_setting_like_hist ADD CONSTRAINT app_timetables_user_setting_like_hist_pk PRIMARY KEY (
id );

CREATE TABLE app_portfolio.app_timetables_user_setting_view (
    user_account_id   INTEGER,
    user_setting_id   INTEGER NOT NULL,
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_longitude  VARCHAR2(100),
    client_latitude   VARCHAR2(100),
    date_created      DATE NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting_view TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.app_timetables_user_setting_view TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting_view TO role_app_dba;

CREATE TABLE app_portfolio.app_timetables_user_setting_view_hist (
    id                INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml               VARCHAR2(1),
    dml_date          DATE,
    user_account_id   INTEGER,
    user_setting_id   INTEGER,
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_latitude   VARCHAR2(100),
    client_longitude  VARCHAR2(100),
    date_created      DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.app_timetables_user_setting_view_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.app_timetables_user_setting_view_hist TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.app_timetables_user_setting_view_hist TO role_app_dba;

ALTER TABLE app_portfolio.app_timetables_user_setting_view_hist ADD CONSTRAINT app_timetables_user_setting_view_hist_pk PRIMARY KEY (
id );

CREATE TABLE app_portfolio.country (
    id               INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    country_code     VARCHAR2(10) NOT NULL,
    flag_emoji       VARCHAR2(10),
    flag_url         VARCHAR2(100),
    country_group_id INTEGER NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.country TO role_app_admin;

GRANT SELECT ON app_portfolio.country TO role_app_timetables;

GRANT SELECT ON app_portfolio.country TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.country TO role_app_dba;

ALTER TABLE app_portfolio.country ADD CONSTRAINT country_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.country_group (
    id         INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    group_name VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.country_group TO role_app_admin;

GRANT SELECT ON app_portfolio.country_group TO role_app_timetables;

GRANT SELECT ON app_portfolio.country_group TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.country_group TO role_app_dba;

ALTER TABLE app_portfolio.country_group ADD CONSTRAINT country_group_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.country_translation (
    country_id  INTEGER NOT NULL,
    language_id INTEGER NOT NULL,
    text        VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.country_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.country_translation TO role_app_timetables;

GRANT SELECT ON app_portfolio.country_translation TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.country_translation TO role_app_dba;

ALTER TABLE app_portfolio.country_translation ADD CONSTRAINT country_translation_pk PRIMARY KEY ( country_id,
                                                                                                  language_id );

CREATE TABLE app_portfolio.group_place (
    id         INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    group_name VARCHAR2(100) NOT NULL,
    icon_emoji VARCHAR2(10),
    icon_url   VARCHAR2(100)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.group_place TO role_app_admin;

GRANT SELECT ON app_portfolio.group_place TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.group_place TO role_app_dba;

ALTER TABLE app_portfolio.group_place ADD CONSTRAINT group_place_pk PRIMARY KEY ( id );

ALTER TABLE app_portfolio.group_place ADD CONSTRAINT group_place_group_name_un UNIQUE ( group_name );

CREATE TABLE app_portfolio.language (
    id        INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    lang_code VARCHAR2(10) NOT NULL
);

CREATE INDEX app_portfolio.lang_code_index ON
    app_portfolio.language (
        lang_code
    ASC );

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.language TO role_app_admin;

GRANT SELECT ON app_portfolio.language TO role_app_property_management;

GRANT SELECT ON app_portfolio.language TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.language TO role_app_dba;

ALTER TABLE app_portfolio.language ADD CONSTRAINT language_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.language_translation (
    language_id             INTEGER NOT NULL,
    language_translation_id INTEGER NOT NULL,
    text                    VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.language_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.language_translation TO role_app_property_management;

GRANT SELECT ON app_portfolio.language_translation TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.language_translation TO role_app_dba;

ALTER TABLE app_portfolio.language_translation ADD CONSTRAINT language_translation_pk PRIMARY KEY ( language_translation_id,
                                                                                                    language_id );

CREATE TABLE app_portfolio.locale (
    language_id INTEGER NOT NULL,
    country_id  INTEGER NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.locale TO role_app_admin;

GRANT SELECT ON app_portfolio.locale TO role_app_property_management;

GRANT SELECT ON app_portfolio.locale TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.locale TO role_app_dba;

ALTER TABLE app_portfolio.locale ADD CONSTRAINT locale_un UNIQUE ( language_id,
                                                                   country_id );

CREATE TABLE app_portfolio.message (
    message_level_id INTEGER NOT NULL,
    message_type_id  INTEGER NOT NULL,
    code             VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.message TO role_app_admin;

GRANT SELECT ON app_portfolio.message TO role_app_home;

GRANT SELECT ON app_portfolio.message TO role_app_property_management;

GRANT SELECT ON app_portfolio.message TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.message TO role_app_dba;

ALTER TABLE app_portfolio.message ADD CONSTRAINT message_pk PRIMARY KEY ( code );

CREATE TABLE app_portfolio.message_level (
    id            INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    message_level VARCHAR2(10) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.message_level TO role_app_admin;

GRANT SELECT ON app_portfolio.message_level TO role_app_home;

GRANT SELECT ON app_portfolio.message_level TO role_app_property_management;

GRANT SELECT ON app_portfolio.message_level TO role_app_timetables;

GRANT ALL PRIVILEGES ON app_portfolio.message_level TO role_app_dba;

ALTER TABLE app_portfolio.message_level ADD CONSTRAINT message_level_pk PRIMARY KEY ( id );

ALTER TABLE app_portfolio.message_level ADD CONSTRAINT message_level_message_level_un UNIQUE ( message_level );

CREATE TABLE app_portfolio.message_translation (
    language_id  INTEGER NOT NULL,
    message_code VARCHAR2(100) NOT NULL,
    text         VARCHAR2(100)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.message_translation TO role_app_admin;

GRANT SELECT ON app_portfolio.message_translation TO role_app_home;

GRANT SELECT ON app_portfolio.message_translation TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.message_translation TO role_app_dba;

GRANT SELECT ON app_portfolio.message_translation TO role_app_timetables;

ALTER TABLE app_portfolio.message_translation ADD CONSTRAINT message_translation_pk PRIMARY KEY ( language_id,
                                                                                                  message_code );

CREATE TABLE app_portfolio.message_type (
    id           INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    message_type VARCHAR2(10) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.message_type TO role_app_admin;

GRANT SELECT ON app_portfolio.message_type TO role_app_home;

GRANT SELECT ON app_portfolio.message_type TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.message_type TO role_app_dba;

GRANT SELECT ON app_portfolio.message_type TO role_app_timetables;

ALTER TABLE app_portfolio.message_type ADD CONSTRAINT message_type_pk PRIMARY KEY ( id );

ALTER TABLE app_portfolio.message_type ADD CONSTRAINT message_type_message_type_un UNIQUE ( message_type );

CREATE TABLE app_portfolio.parameter_type (
    id   VARCHAR2(100) NOT NULL,
    name VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.parameter_type TO role_app_admin;

GRANT SELECT ON app_portfolio.parameter_type TO role_app_home;

GRANT SELECT ON app_portfolio.parameter_type TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.parameter_type TO role_app_dba;

GRANT SELECT ON app_portfolio.parameter_type TO role_app_timetables;

ALTER TABLE app_portfolio.parameter_type ADD CONSTRAINT parameter_type_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.profile_search (
    user_account_id   INTEGER,
    search            VARCHAR2(100) NOT NULL,
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_longitude  VARCHAR2(100),
    client_latitude   VARCHAR2(100),
    date_created      DATE NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.profile_search TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.profile_search TO role_app_home;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.profile_search TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.profile_search TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.profile_search TO role_app_timetables;

CREATE TABLE app_portfolio.profile_search_hist (
    id                INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml               VARCHAR2(1),
    dml_date          DATE,
    user_account_id   INTEGER,
    search            VARCHAR2(100),
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_latitude   VARCHAR2(100),
    client_longitude  VARCHAR2(100),
    date_created      DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.profile_search_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.profile_search_hist TO role_app_home;

GRANT SELECT, INSERT ON app_portfolio.profile_search_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.profile_search_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.profile_search_hist TO role_app_timetables;

ALTER TABLE app_portfolio.profile_search_hist ADD CONSTRAINT profile_search_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.theme_category (
    id    INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    title VARCHAR2(100) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.theme_category TO role_app_admin;

GRANT ALL PRIVILEGES ON app_portfolio.theme_category TO role_app_dba;

GRANT SELECT ON app_portfolio.theme_category TO role_app_timetables;

ALTER TABLE app_portfolio.theme_category ADD CONSTRAINT theme_category_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.theme_type (
    id    INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    title VARCHAR2(10) NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.theme_type TO role_app_admin;

GRANT ALL PRIVILEGES ON app_portfolio.theme_type TO role_app_dba;

GRANT SELECT ON app_portfolio.theme_type TO role_app_timetables;

ALTER TABLE app_portfolio.theme_type ADD CONSTRAINT theme_type_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    bio                  VARCHAR2(150),
    private              NUMBER,
    user_level           NUMBER(1),
    date_created         DATE,
    date_modified        DATE,
    username             VARCHAR2(100),
    password             VARCHAR2(100),
    password_reminder    VARCHAR2(100),
    email                VARCHAR2(100),
    avatar               BLOB,
    validation_code      VARCHAR2(6),
    active               NUMBER,
    provider1_id         VARCHAR2(21),
    provider1_first_name VARCHAR2(1000),
    provider1_last_name  VARCHAR2(1000),
    provider1_image      BLOB,
    provider1_image_url  VARCHAR2(1000),
    provider1_email      VARCHAR2(1000),
    provider2_id         VARCHAR2(15),
    provider2_first_name VARCHAR2(1000),
    provider2_last_name  VARCHAR2(1000),
    provider2_image      BLOB,
    provider2_image_url  VARCHAR2(1000),
    provider2_email      VARCHAR2(1000)
);

GRANT SELECT ON app_portfolio.user_account TO role_app_home;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account TO role_app_timetables;

ALTER TABLE app_portfolio.user_account ADD CONSTRAINT user_account_pk PRIMARY KEY ( id );

ALTER TABLE app_portfolio.user_account ADD CONSTRAINT user_account_provider1_id_un UNIQUE ( provider1_id );

ALTER TABLE app_portfolio.user_account ADD CONSTRAINT user_account_provider2_id_un UNIQUE ( provider2_id );

ALTER TABLE app_portfolio.user_account ADD CONSTRAINT user_account_username_un UNIQUE ( username );

ALTER TABLE app_portfolio.user_account ADD CONSTRAINT user_account_email_un UNIQUE ( email );

CREATE TABLE app_portfolio.user_account_app (
    user_account_id INTEGER NOT NULL,
    app_id          INTEGER NOT NULL,
    date_created    DATE NOT NULL
);

GRANT SELECT ON app_portfolio.user_account_app TO role_app_home;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_app TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_app TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_app TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_app TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_app ADD CONSTRAINT user_account_app_pk PRIMARY KEY ( app_id,
                                                                                            user_account_id );

CREATE TABLE app_portfolio.user_account_app_hist (
    id              INTEGER NOT NULL,
    dml             VARCHAR2(1),
    dml_date        DATE,
    user_account_id INTEGER,
    app_id          INTEGER,
    date_created    DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_app_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_app_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_app_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_app_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_app_hist ADD CONSTRAINT user_account_app_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account_follow (
    id                     INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    user_account_id        INTEGER NOT NULL,
    user_account_id_follow INTEGER NOT NULL,
    date_created           DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_follow TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_follow TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_follow TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_follow TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_follow ADD CONSTRAINT user_account_follow_pk PRIMARY KEY ( user_account_id,
                                                                                                  user_account_id_follow );

ALTER TABLE app_portfolio.user_account_follow ADD CONSTRAINT user_account_follow_un UNIQUE ( id );

CREATE TABLE app_portfolio.user_account_follow_hist (
    id                     INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml                    VARCHAR2(1),
    dml_date               DATE,
    user_account_follow_id INTEGER,
    user_account_id        INTEGER,
    user_account_id_follow INTEGER,
    date_created           DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_follow_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_follow_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_follow_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_follow_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_follow_hist ADD CONSTRAINT user_account_follow_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account_hist (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    dml                  VARCHAR2(1),
    dml_date             DATE,
    user_account_id      INTEGER,
    bio                  VARCHAR2(150),
    private              NUMBER,
    user_level           NUMBER(1),
    date_created         DATE,
    date_modified        DATE,
    username             VARCHAR2(100),
    password             VARCHAR2(100),
    password_reminder    VARCHAR2(100),
    email                VARCHAR2(100),
    avatar               BLOB,
    validation_code      VARCHAR2(6),
    active               NUMBER,
    provider1_id         VARCHAR2(21),
    provider1_first_name VARCHAR2(1000),
    provider1_last_name  VARCHAR2(1000),
    provider1_image_url  VARCHAR2(1000),
    provider1_email      VARCHAR2(1000),
    provider2_id         VARCHAR2(15),
    provider2_first_name VARCHAR2(1000),
    provider2_last_name  VARCHAR2(1000),
    provider2_image_url  VARCHAR2(1000),
    provider2_email      VARCHAR2(1000)
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_hist ADD CONSTRAINT user_account_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account_like (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    user_account_id      INTEGER NOT NULL,
    user_account_id_like INTEGER NOT NULL,
    date_created         DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_like TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_like TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_like TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_like TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_like ADD CONSTRAINT user_account_like_pk PRIMARY KEY ( user_account_id,
                                                                                              user_account_id_like );

ALTER TABLE app_portfolio.user_account_like ADD CONSTRAINT user_account_like_un UNIQUE ( id );

CREATE TABLE app_portfolio.user_account_like_hist (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml                  VARCHAR2(1),
    dml_date             DATE,
    user_account_like_id INTEGER,
    user_account_id      INTEGER,
    user_account_id_like INTEGER,
    date_created         DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_like_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_like_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_like_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_like_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_like_hist ADD CONSTRAINT user_account_like_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account_logon (
    user_account_id   INTEGER NOT NULL,
    app_id            INTEGER NOT NULL,
    result            INTEGER NOT NULL,
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_longitude  VARCHAR2(100),
    client_latitude   VARCHAR2(100),
    date_created      DATE NOT NULL
);

GRANT SELECT, INSERT ON app_portfolio.user_account_logon TO role_app_home;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_logon TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_logon TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_logon TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_logon TO role_app_timetables;

CREATE TABLE app_portfolio.user_account_logon_hist (
    id                INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml               VARCHAR2(1),
    dml_date          DATE,
    user_account_id   INTEGER,
    app_id            INTEGER,
    result            INTEGER,
    client_ip         VARCHAR2(100),
    client_user_agent VARCHAR2(500),
    client_latitude   VARCHAR2(100),
    client_longitude  VARCHAR2(100),
    date_created      DATE
);

GRANT SELECT, INSERT ON app_portfolio.user_account_logon_hist TO role_app_home;

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_logon_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_logon_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_logon_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_logon_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_logon_hist ADD CONSTRAINT user_account_logon_hist_pk PRIMARY KEY ( id );

CREATE TABLE app_portfolio.user_account_view (
    user_account_id      INTEGER,
    user_account_id_view INTEGER NOT NULL,
    client_ip            VARCHAR2(100),
    client_user_agent    VARCHAR2(500),
    client_longitude     VARCHAR2(100),
    client_latitude      VARCHAR2(100),
    date_created         DATE NOT NULL
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_view TO role_app_admin;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_view TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_view TO role_app_dba;

GRANT SELECT, INSERT, DELETE, UPDATE ON app_portfolio.user_account_view TO role_app_timetables;

CREATE TABLE app_portfolio.user_account_view_hist (
    id                   INTEGER
        GENERATED BY DEFAULT ON NULL AS IDENTITY ( START WITH 1 CACHE 30 ORDER )
    NOT NULL,
    dml                  VARCHAR2(1),
    dml_date             DATE,
    user_account_id      INTEGER,
    user_account_id_view INTEGER,
    client_ip            VARCHAR2(100),
    client_user_agent    VARCHAR2(500),
    client_latitude      VARCHAR2(100),
    client_longitude     VARCHAR2(100),
    date_created         DATE
);

GRANT DELETE, INSERT, SELECT, UPDATE ON app_portfolio.user_account_view_hist TO role_app_admin;

GRANT SELECT, INSERT ON app_portfolio.user_account_view_hist TO role_app_property_management;

GRANT ALL PRIVILEGES ON app_portfolio.user_account_view_hist TO role_app_dba;

GRANT SELECT, INSERT ON app_portfolio.user_account_view_hist TO role_app_timetables;

ALTER TABLE app_portfolio.user_account_view_hist ADD CONSTRAINT user_account_view_hist_pk PRIMARY KEY ( id );

ALTER TABLE app_portfolio.app_log
    ADD CONSTRAINT app_log_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_message
    ADD CONSTRAINT app_message_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_message
    ADD CONSTRAINT app_message_message_fk FOREIGN KEY ( message_code )
        REFERENCES app_portfolio.message ( code )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object
    ADD CONSTRAINT app_object_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_item
    ADD CONSTRAINT app_object_item_app_object_fk FOREIGN KEY ( object_name,
                                                               app_id )
        REFERENCES app_portfolio.app_object ( object_name,
                                              app_id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_item_subitem
    ADD CONSTRAINT app_object_item_subitem_app_object_item_fk FOREIGN KEY ( object_name,
                                                                            app_id,
                                                                            object_item_name )
        REFERENCES app_portfolio.app_object_item ( object_name,
                                                   app_id,
                                                   object_item_name )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_item_subitem_fixed
    ADD CONSTRAINT app_object_item_subitem_fixed_app_object_item_fk FOREIGN KEY ( object_name,
                                                                                  app_id,
                                                                                  object_item_name )
        REFERENCES app_portfolio.app_object_item ( object_name,
                                                   app_id,
                                                   object_item_name )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_item_translation
    ADD CONSTRAINT app_object_item_translation_app_object_item_fk FOREIGN KEY ( object_name,
                                                                                app_id,
                                                                                object_item_name )
        REFERENCES app_portfolio.app_object_item ( object_name,
                                                   app_id,
                                                   object_item_name )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_item_translation
    ADD CONSTRAINT app_object_item_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_subitem_translation
    ADD CONSTRAINT app_object_subitem_translation_app_object_item_subitem_fk FOREIGN KEY ( subitem_name,
                                                                                           object_item_name,
                                                                                           object_name,
                                                                                           app_id )
        REFERENCES app_portfolio.app_object_item_subitem ( subitem_name,
                                                           object_item_name,
                                                           object_name,
                                                           app_id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_subitem_translation
    ADD CONSTRAINT app_object_subitem_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_translation
    ADD CONSTRAINT app_object_translation_app_object_fk FOREIGN KEY ( object_name,
                                                                      app_id )
        REFERENCES app_portfolio.app_object ( object_name,
                                              app_id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_object_translation
    ADD CONSTRAINT app_object_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_parameter
    ADD CONSTRAINT app_parameter_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_parameter
    ADD CONSTRAINT app_parameter_parameter_type_fk FOREIGN KEY ( parameter_type_id )
        REFERENCES app_portfolio.parameter_type ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_place
    ADD CONSTRAINT app_timetables_place_country_fk FOREIGN KEY ( country1_id )
        REFERENCES app_portfolio.country ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_place
    ADD CONSTRAINT app_timetables_place_country2_fk FOREIGN KEY ( country2_id )
        REFERENCES app_portfolio.country ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_place
    ADD CONSTRAINT app_timetables_place_group_place_fk FOREIGN KEY ( group_place1_id )
        REFERENCES app_portfolio.group_place ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_place
    ADD CONSTRAINT app_timetables_place_group_place2_fk FOREIGN KEY ( group_place2_id )
        REFERENCES app_portfolio.group_place ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_theme
    ADD CONSTRAINT app_timetables_theme_theme_category_fk FOREIGN KEY ( theme_category_id )
        REFERENCES app_portfolio.theme_category ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_theme
    ADD CONSTRAINT app_timetables_theme_theme_type_fk FOREIGN KEY ( theme_type_id )
        REFERENCES app_portfolio.theme_type ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_app_timetables_place_fk FOREIGN KEY ( gps_popular_place_id )
        REFERENCES app_portfolio.app_timetables_place ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_app_timetables_theme_day_fk FOREIGN KEY ( design_theme_day_id )
        REFERENCES app_portfolio.app_timetables_theme ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_app_timetables_theme_month_fk FOREIGN KEY ( design_theme_month_id )
        REFERENCES app_portfolio.app_timetables_theme ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_app_timetables_theme_year_fk FOREIGN KEY ( design_theme_year_id )
        REFERENCES app_portfolio.app_timetables_theme ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_country_fk FOREIGN KEY ( gps_country_id )
        REFERENCES app_portfolio.country ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting_like
    ADD CONSTRAINT app_timetables_user_setting_like_app_timetables_user_setting_fk FOREIGN KEY ( user_setting_id )
        REFERENCES app_portfolio.app_timetables_user_setting ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting_like
    ADD CONSTRAINT app_timetables_user_setting_like_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting
    ADD CONSTRAINT app_timetables_user_setting_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting_view
    ADD CONSTRAINT app_timetables_user_setting_view_app_timetables_user_setting_fk FOREIGN KEY ( user_setting_id )
        REFERENCES app_portfolio.app_timetables_user_setting ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.app_timetables_user_setting_view
    ADD CONSTRAINT app_timetables_user_setting_view_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.country
    ADD CONSTRAINT country_country_group_fk FOREIGN KEY ( country_group_id )
        REFERENCES app_portfolio.country_group ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.country_translation
    ADD CONSTRAINT country_translation_country_fk FOREIGN KEY ( country_id )
        REFERENCES app_portfolio.country ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.country_translation
    ADD CONSTRAINT country_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.language_translation
    ADD CONSTRAINT language_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.language_translation
    ADD CONSTRAINT language_translation_language_translation_fk FOREIGN KEY ( language_translation_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.locale
    ADD CONSTRAINT locale_country_fk FOREIGN KEY ( country_id )
        REFERENCES app_portfolio.country ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.locale
    ADD CONSTRAINT locale_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.message
    ADD CONSTRAINT message_message_level_fk FOREIGN KEY ( message_level_id )
        REFERENCES app_portfolio.message_level ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.message
    ADD CONSTRAINT message_message_type_fk FOREIGN KEY ( message_type_id )
        REFERENCES app_portfolio.message_type ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.message_translation
    ADD CONSTRAINT message_translation_language_fk FOREIGN KEY ( language_id )
        REFERENCES app_portfolio.language ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.message_translation
    ADD CONSTRAINT message_translation_message_fk FOREIGN KEY ( message_code )
        REFERENCES app_portfolio.message ( code )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.profile_search
    ADD CONSTRAINT profile_search_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_app
    ADD CONSTRAINT user_account_app_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_app
    ADD CONSTRAINT user_account_app_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_follow
    ADD CONSTRAINT user_account_follow_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_follow
    ADD CONSTRAINT user_account_follow_user_account_follow_fk FOREIGN KEY ( user_account_id_follow )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_like
    ADD CONSTRAINT user_account_like_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_like
    ADD CONSTRAINT user_account_like_user_account_like_fk FOREIGN KEY ( user_account_id_like )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_logon
    ADD CONSTRAINT user_account_logon_app_fk FOREIGN KEY ( app_id )
        REFERENCES app_portfolio.app ( id )
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_logon
    ADD CONSTRAINT user_account_logon_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_view
    ADD CONSTRAINT user_account_view_user_account_fk FOREIGN KEY ( user_account_id )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

ALTER TABLE app_portfolio.user_account_view
    ADD CONSTRAINT user_account_view_user_account_view_fk FOREIGN KEY ( user_account_id_view )
        REFERENCES app_portfolio.user_account ( id )
            ON DELETE CASCADE
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_before_delete 
    BEFORE DELETE ON app_portfolio.app_timetables_user_setting 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_hist
(dml,
dml_date,
user_setting_id,
description,
regional_language_locale,
regional_current_timezone_select_id,
regional_timezone_select_id,
regional_number_system_select_id,
regional_layout_direction_select_id,
regional_second_language_locale,
regional_column_title_select_id,
regional_arabic_script_select_id,
regional_calendar_type_select_id,
regional_calendar_hijri_type_select_id,
gps_map_type_select_id,
gps_country_id,
gps_city_id,
gps_popular_place_id,
gps_lat_text,
gps_long_text,
design_theme_day_id,
design_theme_month_id,
design_theme_year_id,
design_paper_size_select_id,
design_row_highlight_select_id,
design_column_weekday_checked,
design_column_calendartype_checked,
design_column_notes_checked,
design_column_gps_checked,
design_column_timezone_checked,
image_header_image_img,
image_footer_image_img,
text_header_1_text,
text_header_2_text,
text_header_3_text,
text_header_align,
text_footer_1_text,
text_footer_2_text,
text_footer_3_text,
text_footer_align,
prayer_method_select_id,
prayer_asr_method_select_id,
prayer_high_latitude_adjustment_select_id,
prayer_time_format_select_id,
prayer_hijri_date_adjustment_select_id,
prayer_fajr_iqamat_select_id,
prayer_dhuhr_iqamat_select_id,
prayer_asr_iqamat_select_id,
prayer_maghrib_iqamat_select_id,
prayer_isha_iqamat_select_id,
prayer_column_imsak_checked,
prayer_column_sunset_checked,
prayer_column_midnight_checked,
prayer_column_fast_start_end_select_id,
date_created,
date_modified,
user_account_id)
VALUES(
'D',
SYSDATE,
:old.id,
:old.description,
:old.regional_language_locale,
:old.regional_current_timezone_select_id,
:old.regional_timezone_select_id,
:old.regional_number_system_select_id,
:old.regional_layout_direction_select_id,
:old.regional_second_language_locale,
:old.regional_column_title_select_id,
:old.regional_arabic_script_select_id,
:old.regional_calendar_type_select_id,
:old.regional_calendar_hijri_type_select_id,
:old.gps_map_type_select_id,
:old.gps_country_id,
:old.gps_city_id,
:old.gps_popular_place_id,
:old.gps_lat_text,
:old.gps_long_text,
:old.design_theme_day_id,
:old.design_theme_month_id,
:old.design_theme_year_id,
:old.design_paper_size_select_id,
:old.design_row_highlight_select_id,
:old.design_column_weekday_checked,
:old.design_column_calendartype_checked,
:old.design_column_notes_checked,
:old.design_column_gps_checked,
:old.design_column_timezone_checked,
null,
null,
:old.text_header_1_text,
:old.text_header_2_text,
:old.text_header_3_text,
:old.text_header_align,
:old.text_footer_1_text,
:old.text_footer_2_text,
:old.text_footer_3_text,
:old.text_footer_align,
:old.prayer_method_select_id,
:old.prayer_asr_method_select_id,
:old.prayer_high_latitude_adjustment_select_id,
:old.prayer_time_format_select_id,
:old.prayer_hijri_date_adjustment_select_id,
:old.prayer_fajr_iqamat_select_id,
:old.prayer_dhuhr_iqamat_select_id,
:old.prayer_asr_iqamat_select_id,
:old.prayer_maghrib_iqamat_select_id,
:old.prayer_isha_iqamat_select_id,
:old.prayer_column_imsak_checked,
:old.prayer_column_sunset_checked,
:old.prayer_column_midnight_checked,
:old.prayer_column_fast_start_end_select_id,
:old.date_created,
:old.date_modified,
:old.user_account_id);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_before_insert 
    BEFORE INSERT ON app_portfolio.app_timetables_user_setting 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_hist
(dml,
dml_date,
user_setting_id,
description,
regional_language_locale,
regional_current_timezone_select_id,
regional_timezone_select_id,
regional_number_system_select_id,
regional_layout_direction_select_id,
regional_second_language_locale,
regional_column_title_select_id,
regional_arabic_script_select_id,
regional_calendar_type_select_id,
regional_calendar_hijri_type_select_id,
gps_map_type_select_id,
gps_country_id,
gps_city_id,
gps_popular_place_id,
gps_lat_text,
gps_long_text,
design_theme_day_id,
design_theme_month_id,
design_theme_year_id,
design_paper_size_select_id,
design_row_highlight_select_id,
design_column_weekday_checked,
design_column_calendartype_checked,
design_column_notes_checked,
design_column_gps_checked,
design_column_timezone_checked,
image_header_image_img,
image_footer_image_img,
text_header_1_text,
text_header_2_text,
text_header_3_text,
text_header_align,
text_footer_1_text,
text_footer_2_text,
text_footer_3_text,
text_footer_align,
prayer_method_select_id,
prayer_asr_method_select_id,
prayer_high_latitude_adjustment_select_id,
prayer_time_format_select_id,
prayer_hijri_date_adjustment_select_id,
prayer_fajr_iqamat_select_id,
prayer_dhuhr_iqamat_select_id,
prayer_asr_iqamat_select_id,
prayer_maghrib_iqamat_select_id,
prayer_isha_iqamat_select_id,
prayer_column_imsak_checked,
prayer_column_sunset_checked,
prayer_column_midnight_checked,
prayer_column_fast_start_end_select_id,
date_created,
date_modified,
user_account_id)
VALUES(
'I',
SYSDATE,
:new.id,
:new.description,
:new.regional_language_locale,
:new.regional_current_timezone_select_id,
:new.regional_timezone_select_id,
:new.regional_number_system_select_id,
:new.regional_layout_direction_select_id,
:new.regional_second_language_locale,
:new.regional_column_title_select_id,
:new.regional_arabic_script_select_id,
:new.regional_calendar_type_select_id,
:new.regional_calendar_hijri_type_select_id,
:new.gps_map_type_select_id,
:new.gps_country_id,
:new.gps_city_id,
:new.gps_popular_place_id,
:new.gps_lat_text,
:new.gps_long_text,
:new.design_theme_day_id,
:new.design_theme_month_id,
:new.design_theme_year_id,
:new.design_paper_size_select_id,
:new.design_row_highlight_select_id,
:new.design_column_weekday_checked,
:new.design_column_calendartype_checked,
:new.design_column_notes_checked,
:new.design_column_gps_checked,
:new.design_column_timezone_checked,
null,
null,
:new.text_header_1_text,
:new.text_header_2_text,
:new.text_header_3_text,
:new.text_header_align,
:new.text_footer_1_text,
:new.text_footer_2_text,
:new.text_footer_3_text,
:new.text_footer_align,
:new.prayer_method_select_id,
:new.prayer_asr_method_select_id,
:new.prayer_high_latitude_adjustment_select_id,
:new.prayer_time_format_select_id,
:new.prayer_hijri_date_adjustment_select_id,
:new.prayer_fajr_iqamat_select_id,
:new.prayer_dhuhr_iqamat_select_id,
:new.prayer_asr_iqamat_select_id,
:new.prayer_maghrib_iqamat_select_id,
:new.prayer_isha_iqamat_select_id,
:new.prayer_column_imsak_checked,
:new.prayer_column_sunset_checked,
:new.prayer_column_midnight_checked,
:new.prayer_column_fast_start_end_select_id,
:new.date_created,
:new.date_modified,
:new.user_account_id);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_before_update 
    BEFORE UPDATE ON app_portfolio.app_timetables_user_setting 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_hist
(dml,
dml_date,
user_setting_id,
description,
regional_language_locale,
regional_current_timezone_select_id,
regional_timezone_select_id,
regional_number_system_select_id,
regional_layout_direction_select_id,
regional_second_language_locale,
regional_column_title_select_id,
regional_arabic_script_select_id,
regional_calendar_type_select_id,
regional_calendar_hijri_type_select_id,
gps_map_type_select_id,
gps_country_id,
gps_city_id,
gps_popular_place_id,
gps_lat_text,
gps_long_text,
design_theme_day_id,
design_theme_month_id,
design_theme_year_id,
design_paper_size_select_id,
design_row_highlight_select_id,
design_column_weekday_checked,
design_column_calendartype_checked,
design_column_notes_checked,
design_column_gps_checked,
design_column_timezone_checked,
image_header_image_img,
image_footer_image_img,
text_header_1_text,
text_header_2_text,
text_header_3_text,
text_header_align,
text_footer_1_text,
text_footer_2_text,
text_footer_3_text,
text_footer_align,
prayer_method_select_id,
prayer_asr_method_select_id,
prayer_high_latitude_adjustment_select_id,
prayer_time_format_select_id,
prayer_hijri_date_adjustment_select_id,
prayer_fajr_iqamat_select_id,
prayer_dhuhr_iqamat_select_id,
prayer_asr_iqamat_select_id,
prayer_maghrib_iqamat_select_id,
prayer_isha_iqamat_select_id,
prayer_column_imsak_checked,
prayer_column_sunset_checked,
prayer_column_midnight_checked,
prayer_column_fast_start_end_select_id,
date_created,
date_modified,
user_account_id)
VALUES(
'U',
SYSDATE,
:old.id,
:old.description,
:old.regional_language_locale,
:old.regional_current_timezone_select_id,
:old.regional_timezone_select_id,
:old.regional_number_system_select_id,
:old.regional_layout_direction_select_id,
:old.regional_second_language_locale,
:old.regional_column_title_select_id,
:old.regional_arabic_script_select_id,
:old.regional_calendar_type_select_id,
:old.regional_calendar_hijri_type_select_id,
:old.gps_map_type_select_id,
:old.gps_country_id,
:old.gps_city_id,
:old.gps_popular_place_id,
:old.gps_lat_text,
:old.gps_long_text,
:old.design_theme_day_id,
:old.design_theme_month_id,
:old.design_theme_year_id,
:old.design_paper_size_select_id,
:old.design_row_highlight_select_id,
:old.design_column_weekday_checked,
:old.design_column_calendartype_checked,
:old.design_column_notes_checked,
:old.design_column_gps_checked,
:old.design_column_timezone_checked,
null,
null,
:old.text_header_1_text,
:old.text_header_2_text,
:old.text_header_3_text,
:old.text_header_align,
:old.text_footer_1_text,
:old.text_footer_2_text,
:old.text_footer_3_text,
:old.text_footer_align,
:old.prayer_method_select_id,
:old.prayer_asr_method_select_id,
:old.prayer_high_latitude_adjustment_select_id,
:old.prayer_time_format_select_id,
:old.prayer_hijri_date_adjustment_select_id,
:old.prayer_fajr_iqamat_select_id,
:old.prayer_dhuhr_iqamat_select_id,
:old.prayer_asr_iqamat_select_id,
:old.prayer_maghrib_iqamat_select_id,
:old.prayer_isha_iqamat_select_id,
:old.prayer_column_imsak_checked,
:old.prayer_column_sunset_checked,
:old.prayer_column_midnight_checked,
:old.prayer_column_fast_start_end_select_id,
:old.date_created,
:old.date_modified,
:old.user_account_id);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_like_before_delete 
    BEFORE DELETE ON app_portfolio.app_timetables_user_setting_like 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_like_hist
(dml,
dml_date,
user_setting_like_id,
user_account_id,
user_setting_id,
date_created)
VALUES
('D',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_setting_id,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_like_before_insert 
    BEFORE INSERT ON app_portfolio.app_timetables_user_setting_like 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_like_hist
(dml,
dml_date,
user_setting_like_id,
user_account_id,
user_setting_id,
date_created)
VALUES
('I',
SYSDATE,
:new.id,
:new.user_account_id,
:new.user_setting_id,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_like_before_update 
    BEFORE UPDATE ON app_portfolio.app_timetables_user_setting_like 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_like_hist
(dml,
dml_date,
user_setting_like_id,
user_account_id,
user_setting_id,
date_created)
VALUES
('U',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_setting_id,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_view_before_delete 
    BEFORE DELETE ON app_portfolio.app_timetables_user_setting_view 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_view_hist
(dml,
dml_date,
user_account_id,
user_setting_id,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('D',
SYSDATE,
:old.user_account_id,
:old.user_setting_id,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_view_before_insert 
    BEFORE INSERT ON app_portfolio.app_timetables_user_setting_view 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_view_hist
(dml,
dml_date,
user_account_id,
user_setting_id,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('I',
SYSDATE,
:new.user_account_id,
:new.user_setting_id,
:new.client_ip,
:new.client_user_agent,
:new.client_longitude,
:new.client_latitude,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.app_timetables_user_setting_view_before_update 
    BEFORE UPDATE ON app_portfolio.app_timetables_user_setting_view 
    FOR EACH ROW 
BEGIN
INSERT INTO app_timetables_user_setting_view_hist
(dml,
dml_date,
user_account_id,
user_setting_id,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('U',
SYSDATE,
:old.user_account_id,
:old.user_setting_id,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.profile_search_before_delete 
    BEFORE DELETE ON app_portfolio.profile_search 
    FOR EACH ROW 
BEGIN
INSERT INTO profile_search_hist
(dml,
dml_date,
user_account_id,
search,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('D',
SYSDATE,
:old.user_account_id,
:old.search,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.profile_search_before_insert 
    BEFORE INSERT ON app_portfolio.profile_search 
    FOR EACH ROW 
BEGIN
INSERT INTO profile_search_hist
(dml,
dml_date,
user_account_id,
search,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('I',
SYSDATE,
:new.user_account_id,
:new.search,
:new.client_ip,
:new.client_user_agent,
:new.client_longitude,
:new.client_latitude,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.profile_search_before_update 
    BEFORE UPDATE ON app_portfolio.profile_search 
    FOR EACH ROW 
BEGIN
INSERT INTO profile_search_hist
(dml,
dml_date,
user_account_id,
search,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('U',
SYSDATE,
:old.user_account_id,
:old.search,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_app_before_delete 
    BEFORE DELETE ON app_portfolio.user_account_app 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_app_hist
(dml,
dml_date,
user_account_id,
app_id,
date_created)
VALUES
('D',
SYSDATE,
:old.user_account_id,
:old.app_id,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_app_before_insert 
    BEFORE INSERT ON app_portfolio.user_account_app 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_app_hist
(dml,
dml_date,
user_account_id,
app_id,
date_created)
VALUES
('I',
SYSDATE,
:new.user_account_id,
:new.app_id,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_app_before_update 
    BEFORE UPDATE ON app_portfolio.user_account_app 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_app_hist
(dml,
dml_date,
user_account_id,
app_id,
date_created)
VALUES
('U',
SYSDATE,
:old.user_account_id,
:old.app_id,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_before_delete 
    BEFORE DELETE ON app_portfolio.user_account 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_hist
	(dml,
	dml_date,
	user_account_id,
	bio,
	private,
	user_level,
	date_created,
	date_modified,
	username,
	password,
	password_reminder,
	email,
	avatar,
	validation_code,
	active,
	provider1_id,
	provider1_first_name,
	provider1_last_name,
	provider1_image_url,
	provider1_email,
	provider2_id,
	provider2_first_name,
	provider2_last_name,
	provider2_image_url,
	provider2_email)
	VALUES
	('D',
	SYSDATE,
	:old.id,
	:old.bio,
	:old.private,
	:old.user_level,
	:old.date_created,
	:old.date_modified,
	:old.username,
	:old.password,
	:old.password_reminder,
	:old.email,
	null,
	:old.validation_code,
	:old.active,
	:old.provider1_id,
	:old.provider1_first_name,
	:old.provider1_last_name,
	:old.provider1_image_url,
	:old.provider1_email,
	:old.provider2_id,
	:old.provider2_first_name,
	:old.provider2_last_name,
	:old.provider2_image_url,
	:old.provider2_email);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_before_insert 
    BEFORE INSERT ON app_portfolio.user_account 
    FOR EACH ROW 
BEGIN
	IF :new.username IS NOT NULL THEN
    		:new.provider1_first_name := null;
		:new.provider1_last_name := null;
		:new.provider1_image := null;
		:new.provider1_image_url := null;
		:new.provider1_email := null;
		:new.provider2_first_name := null;
		:new.provider2_last_name := null;
		:new.provider2_image := null;
		:new.provider2_image_url := null;
		:new.provider2_email := null;
    END IF;
	IF :new.provider1_id IS NOT NULL OR :new.provider2_id IS NOT NULL THEN
		:new.username := null;
        	:new.password := null;
		:new.password_reminder := null;
		:new.email := null;
		:new.avatar := null;
		:new.validation_code := null;
		IF :new.provider1_id IS NOT NULL THEN
			:new.provider2_first_name := null;
			:new.provider2_last_name := null;
			:new.provider2_image := null;
			:new.provider2_image_url := null;
			:new.provider2_email := null;
		ELSE
			:new.provider1_first_name := null;
			:new.provider1_last_name := null;
			:new.provider1_image := null;
			:new.provider1_image_url := null;
			:new.provider1_email := null;
		END IF;
	END IF;
    IF (LENGTH(:new.username) < 5 OR LENGTH(:new.username) > 100) THEN 
        raise_application_error(-20100,'username 5 - 100 characters');
	ELSIF (:new.username LIKE '% %' OR 
		   :new.username LIKE '%?%' OR
		   :new.username LIKE '%/%' OR
		   :new.username LIKE '%+%' OR
             :new.username LIKE '%"%' OR
             :new.username LIKE '%''%') THEN 
        raise_application_error(-20101,'not valid username');
	ELSIF (LENGTH(:new.bio) > 100) THEN 
        raise_application_error(-20102,'bio max 100 characters');
	ELSIF (LENGTH(:new.email) > 100) THEN 
        raise_application_error(-20103,'email max 100 characters');
	ELSIF (LENGTH(:new.password_reminder) > 100) THEN 
        raise_application_error(-20104,'reminder max 100 characters');
	ELSIF NOT REGEXP_LIKE(:new.email, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
		raise_application_error(-20105,'not valid email');
	ELSIF (LENGTH(:new.password) < 10 OR LENGTH(:new.password) > 100) THEN 
		raise_application_error(-20106,'Password 10 - 100 characters');
	ELSIF :new.provider1_id IS NULL AND :new.provider2_id IS NULL AND
		(:new.username IS NULL OR :new.password IS NULL OR :new.email IS NULL) THEN 
		raise_application_error(-20107,'Username, password and email are required');
	ELSIF :new.provider1_id IS NOT NULL AND :new.provider2_id IS NOT NULL THEN 
		raise_application_error(-20108,'One provider one user');
     END IF;
	INSERT INTO user_account_hist
	(dml,
	dml_date,
	user_account_id,
	bio,
	private,
	user_level,
	date_created,
	date_modified,
	username,
	password,
	password_reminder,
	email,
	avatar,
	validation_code,
	active,
	provider1_id,
	provider1_first_name,
	provider1_last_name,
	provider1_image_url,
	provider1_email,
	provider2_id,
	provider2_first_name,
	provider2_last_name,
	provider2_image_url,
	provider2_email)
	VALUES
	('I',
	SYSDATE,
	:new.id,
	:new.bio,
	:new.private,
	:new.user_level,
	:new.date_created,
	:new.date_modified,
	:new.username,
	:new.password,
	:new.password_reminder,
	:new.email,
	null,
	:new.validation_code,
	:new.active,
	:new.provider1_id,
	:new.provider1_first_name,
	:new.provider1_last_name,
	:new.provider1_image_url,
	:new.provider1_email,
	:new.provider2_id,
	:new.provider2_first_name,
	:new.provider2_last_name,
	:new.provider2_image_url,
	:new.provider2_email);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_before_update 
    BEFORE UPDATE ON app_portfolio.user_account 
    FOR EACH ROW 
BEGIN
	IF :new.username IS NOT NULL THEN
    		:new.provider1_first_name := null;
		:new.provider1_last_name := null;
		:new.provider1_image := null;
		:new.provider1_image_url := null;
		:new.provider1_email := null;
		:new.provider2_first_name := null;
		:new.provider2_last_name := null;
		:new.provider2_image := null;
		:new.provider2_image_url := null;
		:new.provider2_email := null;
    END IF;
	IF :new.provider1_id IS NOT NULL OR :new.provider2_id IS NOT NULL THEN
		:new.username := null;
        	:new.password := null;
		:new.password_reminder := null;
		:new.email := null;
		:new.avatar := null;
		:new.validation_code := null;
		IF :new.provider1_id IS NOT NULL THEN
			:new.provider2_first_name := null;
			:new.provider2_last_name := null;
			:new.provider2_image := null;
			:new.provider2_image_url := null;
			:new.provider2_email := null;
		ELSE
			:new.provider1_first_name := null;
			:new.provider1_last_name := null;
			:new.provider1_image := null;
			:new.provider1_image_url := null;
			:new.provider1_email := null;
		END IF;
	END IF;
    IF (LENGTH(:new.username) < 5 OR LENGTH(:new.username) > 100) THEN 
        raise_application_error(-20100,'username 5 - 100 characters');
	ELSIF (:new.username LIKE '% %' OR 
		   :new.username LIKE '%?%' OR
		   :new.username LIKE '%/%' OR
		   :new.username LIKE '%+%' OR
             :new.username LIKE '%"%' OR
             :new.username LIKE '%''%') THEN 
        raise_application_error(-20101,'not valid username');
	ELSIF (LENGTH(:new.bio) > 100) THEN 
        raise_application_error(-20102,'bio max 100 characters');
	ELSIF (LENGTH(:new.email) > 100) THEN 
        raise_application_error(-20103,'email max 100 characters');
	ELSIF (LENGTH(:new.password_reminder) > 100) THEN 
        raise_application_error(-20104,'reminder max 100 characters');
	ELSIF NOT REGEXP_LIKE(:new.email, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
		raise_application_error(-20105,'not valid email');
	ELSIF (LENGTH(:new.password) < 10 OR LENGTH(:new.password) > 100) THEN 
		raise_application_error(-20106,'Password 10 - 100 characters');
	ELSIF :new.provider1_id IS NULL AND :new.provider2_id IS NULL AND
		(:new.username IS NULL OR :new.password IS NULL OR :new.email IS NULL) THEN 
		raise_application_error(-20107,'Username, password and email are required');
	ELSIF :new.provider1_id IS NOT NULL AND :new.provider2_id IS NOT NULL THEN 
		raise_application_error(-20108,'One provider one user');
     END IF;
	INSERT INTO user_account_hist
		(dml,
		dml_date,
		user_account_id,
		bio,
		private,
		user_level,
		date_created,
		date_modified,
		username,
		password,
		password_reminder,
		email,
		avatar,
		validation_code,
		active,
		provider1_id,
		provider1_first_name,
		provider1_last_name,
		provider1_image_url,
		provider1_email,
		provider2_id,
		provider2_first_name,
		provider2_last_name,
		provider2_image_url,
		provider2_email)
		VALUES
		('U',
		SYSDATE,
		:old.id,
		:old.bio,
		:old.private,
		:old.user_level,
		:old.date_created,
		:old.date_modified,
		:old.username,
		:old.password,
		:old.password_reminder,
		:old.email,
		null,
		:old.validation_code,
		:old.active,
		:old.provider1_id,
		:old.provider1_first_name,
		:old.provider1_last_name,
		:old.provider1_image_url,
		:old.provider1_email,
		:old.provider2_id,
		:old.provider2_first_name,
		:old.provider2_last_name,
		:old.provider2_image_url,
		:old.provider2_email);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_follow_before_delete 
    BEFORE DELETE ON app_portfolio.user_account_follow 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_follow_hist
(dml,
dml_date,
user_account_follow_id,
user_account_id,
user_account_id_follow,
date_created)
VALUES
('D',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_account_id_follow,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_follow_before_insert 
    BEFORE INSERT ON app_portfolio.user_account_follow 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_follow_hist
(dml,
dml_date,
user_account_follow_id,
user_account_id,
user_account_id_follow,
date_created)
VALUES
('I',
SYSDATE,
:new.id,
:new.user_account_id,
:new.user_account_id_follow,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_follow_before_update 
    BEFORE UPDATE ON app_portfolio.user_account_follow 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_follow_hist
(dml,
dml_date,
user_account_follow_id,
user_account_id,
user_account_id_follow,
date_created)
VALUES
('U',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_account_id_follow,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_like_before_delete 
    BEFORE DELETE ON app_portfolio.user_account_like 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_like_hist
(dml,
dml_date,
user_account_like_id,
user_account_id,
user_account_id_like,
date_created)
VALUES
('D',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_account_id_like,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_like_before_insert 
    BEFORE INSERT ON app_portfolio.user_account_like 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_like_hist
(dml,
dml_date,
user_account_like_id,
user_account_id,
user_account_id_like,
date_created)
VALUES
('I',
SYSDATE,
:new.id,
:new.user_account_id,
:new.user_account_id_like,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_like_before_update 
    BEFORE UPDATE ON app_portfolio.user_account_like 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_like_hist
(dml,
dml_date,
user_account_like_id,
user_account_id,
user_account_id_like,
date_created)
VALUES
('U',
SYSDATE,
:old.id,
:old.user_account_id,
:old.user_account_id_like,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_logon_before_delete 
    BEFORE DELETE ON app_portfolio.user_account_logon 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_logon_hist
(dml,
dml_date,
user_account_id,
app_id,
result,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('D',
SYSDATE,
:old.user_account_id,
:old.app_id,
:old.result,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_logon_before_insert 
    BEFORE INSERT ON app_portfolio.user_account_logon 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_logon_hist
(dml,
dml_date,
user_account_id,
app_id,
result,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('I',
SYSDATE(),
:new.user_account_id,
:new.app_id,
:new.result,
:new.client_ip,
:new.client_user_agent,
:new.client_longitude,
:new.client_latitude,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_logon_before_update 
    BEFORE UPDATE ON app_portfolio.user_account_logon 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_logon_hist
(dml,
dml_date,
user_account_id,
app_id,
result,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('U',
SYSDATE,
:old.user_account_id,
:old.app_id,
:old.result,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_view_before_delete 
    BEFORE DELETE ON app_portfolio.user_account_view 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_view_hist
(dml,
dml_date,
user_account_id,
user_account_id_view,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('D',
SYSDATE,
:old.user_account_id,
:old.user_account_id_view,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_view_before_insert 
    BEFORE INSERT ON app_portfolio.user_account_view 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_view_hist
(dml,
dml_date,
user_account_id,
user_account_id_view,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('I',
SYSDATE,
:new.user_account_id,
:new.user_account_id_view,
:new.client_ip,
:new.client_user_agent,
:new.client_longitude,
:new.client_latitude,
:new.date_created);
END; 
/

CREATE OR REPLACE TRIGGER app_portfolio.user_account_view_before_update 
    BEFORE UPDATE ON app_portfolio.user_account_view 
    FOR EACH ROW 
BEGIN
INSERT INTO user_account_view_hist
(dml,
dml_date,
user_account_id,
user_account_id_view,
client_ip,
client_user_agent,
client_longitude,
client_latitude,
date_created)
VALUES
('U',
SYSDATE,
:old.user_account_id,
:old.user_account_id_view,
:old.client_ip,
:old.client_user_agent,
:old.client_longitude,
:old.client_latitude,
:old.date_created);
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            47
-- CREATE INDEX                             1
-- ALTER TABLE                            108
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          30
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              5
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              5
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

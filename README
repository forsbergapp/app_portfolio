App portfolio

A platform to build your app portfolio.
With most necessary technology configured to get started.
Includes 
	Startpage to display your app portfolio.
	Oracle SQL Developer Data model designed data model.
	Scripts to create in mySQL or Oracle Database.
	Global parameters controlled from Node server.

	Timetables app
	Progressive web app also called single page web app.
	Worlds most advanced traditional prayer timetable calculation.
	All known regional settings, all languagues and all countries supported.
	Navigate in calendar per day, month or year in Gregorian or Hijri
	calendar type in realtime.
	REST API with authentication to mySQL or Oracle Database.
	Facebook Login and Google sign in or create local user with user verification.
	App can be used without registering but then settings can't be saved.
	Map integration with automatic timezone and GPS lookup.
	QR code dynamic generation.
	Social network functionality with profile, like, follow, view other user settings and statistics.
	Microservice architecture with monitoring of each microservice activity.
	Centralized data model error handling of database errors, constraints errors and 
	application errors and showed in users language.
	Timetables can be displayed with different themes using CSS3.
	User interface and timetables can be displayed in any language with help of Google Noto Fonts
	and translation of user interface is fetched from translation objects data model.
	
	Server generated PDF and HTML generated timetables are pixel perfect designed using pt font sizes
	and timetable paper size supported are A4 and Letter.
	Some HTML server side rendering with database data population is performed at startup.
	Different application themes available from about dialogue.
	App is written in pure Javascript and ES6 Javascript is often used in both client and server.
	Runs in Node.js using express framework.
	App client is component structured and server-side rendered.

	Property management app
	Data model displayed at the moment and added to display how multiple apps can be managed.

installation instructions

1. install Node.js on server,
version 17.3.0 supported

	modules required
	npm install express
	npm install mysql
	npm install oracledb
	npm install dotenv
	npm install --save-dev nodemon
	npm install bcryptjs
	npm install helmet@4.6.0
	npm install jsonwebtoken
	npm install nodemailer
	npm install node-fetch@2.6.1
	npm install -g pm2

	npm install puppeteer
	//puppeteer options on Linux
	npm install puppeteer --unsafe-perm=true
	//install dependencies Oracle Linux for puppeteer
	sudo yum install atk
	sudo yum install at-spi2-atk
	sudo yum install cups-libs
	sudo yum install libdrm
	sudo yum install libxkbcommon
	sudo yum install libXcomposite
	sudo yum install libXdamage
	sudo yum install libXrandr
	sudo yum install mesa-libgbm
	sudo yum install pango
	sudo yum install alsa-lib

2. install mysql/oracle on same server or other server
   mySQL 8.0.27 supported, other version should work
   Oracle Autonomous JSON Database 21C supported, other version should work

   For Oracle Database, install Oracle Instant Client
   www.oracle.com/database/technologies/instant-client.html

   See .env file for Oracle Instant Client variables.

   use Unicode characterset to support emojis and all languages

   run scripts/mysql.ddl as root in mysql database or
   run script/oracle.ddl as admin/dba in oracle database

	USER CREATED			ROLE AND APP_ID INFO
	app_portfolio			role ROLE_APP_DBA
							database user, do not use in app
	app_admin				role ROLE_APP_ADMIN
							app admin in app
	app_home				role ROLE_APP_HOME
							app_id=0
	app_timetables 			role ROLE_APP_TIMETABLES
							app_id=1
	app_property_management role ROLE_APP_PROPERTY_MANAGEMENT
							app_id=2

	default passsword APP_1_portfolio for all users

	run in app_portfolio mysql database or oracle schema:
   import import.sql
   import language *.sql files

3. register google sign in
   requires hostname
   https://console.developers.google.com/

   if not using Google
   set database parameter USER_PROVIDER1_USE=0
   hides login button and app will not use SDK

   default USER_PROVIDER1_USE=1

4. register Facebook login

   https://developers.facebook.com/docs/facebook-login/web

   if not using Facebook 
   set database parameter USER_PROVIDER1_USE=0
   hides login button and app will not use SDK

   default USER_PROVIDER2_USE=1

5. register mapbox 
   get access token
   https://www.mapbox.com/api-documentation/#access-tokens-and-token-scopes

   without token map does not work.
   
6. register email provider
   hostname, port, username, password
   Check if email provider allows sending from apps if using free account.
   For Gmail accounts check https://myaccount.google.com/lesssecureapps

7. generate ssl files for https, use recommended letsencrypt for domain,
   use self sign for localhost

8. download app from Github

   mkdir app_portfolio
   cd app_portfolio
   git clone https://github.com/appportfolio/app_portfolio.git

9. create .env file in /app_portfolio
set values in {} and modify default value if necessary
change default db password

#server variables
SERVER_HTTPS_KEY                        			={PATH}\{FILENAME}
SERVER_HTTPS_CERT                       			={PATH}\{FILENAME}
SERVER_PORT                             			=80
SERVER_HTTPS_PORT                       			=443
SERVER_JSON_LIMIT                          			=10MB
#service variables
#What database to use
#1=DB1 mySQL, 2=DB2 Oracle
SERVICE_DB_USE                           			=1
#mySQL
SERVICE_DB_DB1_USER0                         		=app_home
SERVICE_DB_DB1_PASS0                         		=APP_1_portfolio
SERVICE_DB_DB1_USER1                        		=app_timetables
SERVICE_DB_DB1_PASS1                        		=APP_1_portfolio
SERVICE_DB_DB1_USER2                        		=app_property_management
SERVICE_DB_DB1_PASS2                        		=APP_1_portfolio
SERVICE_DB_DB1_PORT                         		={PORT}
SERVICE_DB_DB1_HOST                         		={HOSTNAME} (or localhost)
SERVICE_DB_DB1_NAME                         		=app_portfolio
SERVICE_DB_DB1_CHARACTERSET                 		='utf8mb4'
SERVICE_DB_DB1_CONNECTION_LIMIT             		=10
#Oracle
SERVICE_DB_DB2_USER0                         		=app_home
SERVICE_DB_DB2_PASS0                         		=APP_1_portfolio
SERVICE_DB_DB2_USER1                        		=app_timetables
SERVICE_DB_DB2_PASS1                        		=APP_1_portfolio
SERVICE_DB_DB2_USER2                        		=app_property_management
SERVICE_DB_DB2_PASS2                        		=APP_1_portfolio
SERVICE_DB_DB1_NAME                         		=app_portfolio
SERVICE_DB_DB2_CONNECTSTRING                		={CONNECTION STRING}
SERVICE_DB_DB2_POOL_MIN                     		=0
SERVICE_DB_DB2_POOL_MAX                     		=4
SERVICE_DB_DB2_POOL_INCREMENT               		=0
#Oracle Instant Client path
SERVICE_DB_DB2_LIBDIR								={ORACLE_INSTANT_CLIENT_PATH}
SERVICE_DB_DB2_CONFIGDIR							={PATH_TNSNAMES_SQLNET_OR_WALLET_FILE_CONTENT}
SERVICE_URL_GPS_PLACE                   			=http://www.geoplugin.net/extras/location.gp
SERVICE_URL_GPS_IP                      			=http://www.geoplugin.net/json.gp
SERVICE_AUTH_TOKEN_SECRET               			=23e78y2Basj22ai
SERVICE_AUTH_TOKEN_EXPIRE_ACCESS        			=1h
SERVICE_AUTH_TOKEN_EXPIRE_DATA          			=2d
#Common app variables
APP_REST_CLIENT_ID									={APP_REST_CLIENT_ID}
APP_REST_CLIENT_SECRET								={APP_REST_CLIENT_SECRET}
#App 1 variables
APP1_ID						        				=1
#Email variables SERVER
APP1_SERVICE_EMAIL_HOST                         	={EMAIL_HOST}
APP1_SERVICE_EMAIL_PORT                         	={EMAIL_PORT}
APP1_SERVICE_EMAIL_SECURE                       	=true
APP1_SERVICE_EMAIL_USERNAME                     	={EMAIL_USERNAME}
APP1_SERVICE_EMAIL_PASSWORD                     	={EMAIL_PASSWORD}
APP1_SERVICE_EMAILTYPE_SIGNUP                   	=1
APP1_SERVICE_EMAILTYPE_SIGNUP_FROM_NAME				={FROM NAME}
APP1_SERVICE_EMAILTYPE_UNVERIFIED               	=2
APP1_SERVICE_EMAILTYPE_UNVERIFIED_FROM_NAME			={FROM NAME}
APP1_SERVICE_EMAILTYPE_RESET_PASSWORD           	=3
APP1_SERVICE_EMAILTYPE_RESET_PASSWORD_FROM_NAME		={FROM NAME}
APP1_SERVICE_EMAILTYPE_CHANGE_EMAIL             	=4
APP1_SERVICE_EMAILTYPE_CHANGE_EMAIL_FROM_NAME		={FROM NAME}

10. database parameters
update scripts/import.sql or after import

table app
set app url and logo

update {} values in table app_parameter
and
update info files as needed, some variables are inside the info files
see following variables:
INFO_LINKX_URL
SOCIAL_LINKX_NAME

change other parameters in app_parameter if needed

COPYRIGHT									={COPYRIGHT TEXT}
EMAIL										={HOMEPAGE EMAIL}
USER_PROVIDER1_ID							={GOOGLE_ID}
USER_PROVIDER2_ID							={FACEBOOK_ID}
APP_REST_CLIENT_ID							={APP_REST_CLIENT_ID}
APP_REST_CLIENT_SECRET						={APP_REST_CLIENT_SECRET}
#App1 Timetables variables
EMAIL_POLICY				        		={EMAIL_POLICY}
EMAIL_DISCLAIMER				    		={EMAIL_DISCLAIMER}
EMAIL_TERMS									={EMAIL_TERMS}
SOCIAL_LINK1_URL				    		={YOUR_SOCIAL_URL1} or empty
SOCIAL_LINK2_URL				    		={YOUR_SOCIAL_URL2} or empty
SOCIAL_LINK3_URL				    		={YOUR_SOCIAL_URL3} or empty
SOCIAL_LINK4_URL				    		={YOUR_SOCIAL_URL4} or empty
SOCIAL_LINK1_NAME				    		={YOUR_SOCIAL_NAME1} or empty
SOCIAL_LINK2_NAME				    		={YOUR_SOCIAL_NAME2} or empty
SOCIAL_LINK3_NAME				    		={YOUR_SOCIAL_NAME3} or empty
SOCIAL_LINK4_NAME				    		={YOUR_SOCIAL_NAME4} or empty
INFO_LINK1_URL				        		=/app1/info/privacy_policy.html
INFO_LINK2_URL				        		=/app1/info/disclaimer.html
INFO_LINK3_URL				        		=/app1/info/terms.html
INFO_LINK4_URL				        		=/app1/info/support.html
INFO_LINK5_URL				        		=/app1/info/about.html
INFO_LINK1_NAME				    			=Privacy Policy
INFO_LINK2_NAME				    			=Disclaimer
INFO_LINK3_NAME				    			=Terms
INFO_LINK4_NAME				    			=Support
INFO_LINK5_NAME				    			=About
GPS_MAP_ACCESS_TOKEN						={MAPBOX_ID}

   observe also some global javascript values in 
   js/app_globals.js

11. run app on any supported Node.js platform

   node server.js
   or with pm2
   pm2 start server-js --name "app_portfolio"